{"remainingRequest":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\New folder\\vue-argon-design-system\\src\\components\\BaseDropdown.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\New folder\\vue-argon-design-system\\src\\components\\BaseDropdown.vue","mtime":1648190007537},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\babel.config.js","mtime":1648190007451},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648104036232},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1648103981216},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648104036232},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1648104044860}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"base-dropdown\",\n  props: {\n    direction: {\n      type: String,\n      default: \"down\"\n    },\n    title: {\n      type: String,\n      description: \"Dropdown title\"\n    },\n    icon: {\n      type: String,\n      description: \"Icon for dropdown title\"\n    },\n    position: {\n      type: String,\n      description: \"Position of dropdown menu (e.g right|left)\"\n    },\n    menuClasses: {\n      type: [String, Object],\n      description: \"Dropdown menu classes\"\n    },\n    hideArrow: {\n      type: Boolean,\n      description: \"Whether dropdown arrow should be hidden\"\n    },\n    tag: {\n      type: String,\n      default: \"li\",\n      description: \"Dropdown html tag (e.g div, li etc)\"\n    }\n  },\n  data: function data() {\n    return {\n      isOpen: false\n    };\n  },\n  methods: {\n    toggleDropDown: function toggleDropDown() {\n      this.isOpen = !this.isOpen;\n      this.$emit(\"change\", this.isOpen);\n    },\n    closeDropDown: function closeDropDown() {\n      this.isOpen = false;\n      this.$emit(\"change\", this.isOpen);\n    }\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAwBA;AACAA,uBADA;AAEAC;AACAC;AACAC,kBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAG;AAFA,KALA;AASAC;AACAJ,kBADA;AAEAG;AAFA,KATA;AAaAE;AACAL,kBADA;AAEAG;AAFA,KAbA;AAiBAG;AACAN,4BADA;AAEAG;AAFA,KAjBA;AAqBAI;AACAP,mBADA;AAEAG;AAFA,KArBA;AAyBAK;AACAR,kBADA;AAEAC,mBAFA;AAGAE;AAHA;AAzBA,GAFA;AAiCAM,MAjCA,kBAiCA;AACA;AACAC;AADA;AAGA,GArCA;AAsCAC;AACAC,kBADA,4BACA;AACA;AACA;AACA,KAJA;AAKAC,iBALA,2BAKA;AACA;AACA;AACA;AARA;AAtCA","names":["name","props","direction","type","default","title","description","icon","position","menuClasses","hideArrow","tag","data","isOpen","methods","toggleDropDown","closeDropDown"],"sourceRoot":"src/components","sources":["BaseDropdown.vue"],"sourcesContent":["<template>\r\n    <component class=\"dropdown\"\r\n               :is=\"tag\"\r\n               :class=\"[{show: isOpen}, {'dropdown': direction === 'down'}, {'dropup': direction ==='up'}]\"\r\n               aria-haspopup=\"true\"\r\n               :aria-expanded=\"isOpen\"\r\n               @click=\"toggleDropDown\"\r\n               v-click-outside=\"closeDropDown\">\r\n\r\n        <slot name=\"title\">\r\n            <a class=\"dropdown-toggle nav-link\"\r\n               :class=\"{'no-caret': hideArrow}\"\r\n               data-toggle=\"dropdown\">\r\n                <i :class=\"icon\"></i>\r\n                <span class=\"no-icon\">{{title}}</span>\r\n            </a>\r\n        </slot>\r\n        <ul class=\"dropdown-menu\"\r\n            :class=\"[{'dropdown-menu-right': position === 'right'}, {show: isOpen}, menuClasses]\">\r\n            <slot></slot>\r\n        </ul>\r\n    </component>\r\n</template>\r\n<script>\r\nexport default {\r\n  name: \"base-dropdown\",\r\n  props: {\r\n    direction: {\r\n      type: String,\r\n      default: \"down\"\r\n    },\r\n    title: {\r\n      type: String,\r\n      description: \"Dropdown title\"\r\n    },\r\n    icon: {\r\n      type: String,\r\n      description: \"Icon for dropdown title\"\r\n    },\r\n    position: {\r\n      type: String,\r\n      description: \"Position of dropdown menu (e.g right|left)\"\r\n    },\r\n    menuClasses: {\r\n      type: [String, Object],\r\n      description: \"Dropdown menu classes\"\r\n    },\r\n    hideArrow: {\r\n      type: Boolean,\r\n      description: \"Whether dropdown arrow should be hidden\"\r\n    },\r\n    tag: {\r\n      type: String,\r\n      default: \"li\",\r\n      description: \"Dropdown html tag (e.g div, li etc)\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      isOpen: false\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDropDown() {\r\n      this.isOpen = !this.isOpen;\r\n      this.$emit(\"change\", this.isOpen);\r\n    },\r\n    closeDropDown() {\r\n      this.isOpen = false;\r\n      this.$emit(\"change\", this.isOpen);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style>\r\n.dropdown {\r\n  list-style-type: none;\r\n}\r\n\r\n.dropdown .dropdown-toggle {\r\n  cursor: pointer;\r\n}\r\n</style>\r\n"]}]}