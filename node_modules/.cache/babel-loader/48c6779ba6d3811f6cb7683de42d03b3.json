{"remainingRequest":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\babel-loader\\lib\\index.js!D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\vue\\New folder\\vue-argon-design-system\\src\\components\\BaseRadio.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\vue\\New folder\\vue-argon-design-system\\src\\components\\BaseRadio.vue","mtime":1648190007539},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\babel.config.js","mtime":1648190007451},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648104036232},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\babel-loader\\lib\\index.js","mtime":1648103981216},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1648104036232},{"path":"D:\\vue\\New folder\\vue-argon-design-system\\node_modules\\vue-loader\\lib\\index.js","mtime":1648104044860}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { randomString } from \"./stringUtils\";\nexport default {\n  name: \"base-radio\",\n  props: {\n    name: {\n      type: [String, Number],\n      description: \"Radio label\"\n    },\n    disabled: {\n      type: Boolean,\n      description: \"Whether radio is disabled\"\n    },\n    value: {\n      type: [String, Boolean],\n      description: \"Radio value\"\n    },\n    inline: {\n      type: Boolean,\n      description: \"Whether radio is inline\"\n    }\n  },\n  data: function data() {\n    return {\n      cbId: \"\"\n    };\n  },\n  computed: {\n    model: {\n      get: function get() {\n        return this.value;\n      },\n      set: function set(value) {\n        this.$emit(\"input\", value);\n      }\n    },\n    inlineClass: function inlineClass() {\n      if (this.inline) {\n        return \"form-check-inline\";\n      }\n\n      return \"\";\n    }\n  },\n  mounted: function mounted() {\n    this.cbId = randomString();\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACAA,oBADA;AAEAC;AACAD;AACAE,4BADA;AAEAC;AAFA,KADA;AAKAC;AACAF,mBADA;AAEAC;AAFA,KALA;AASAE;AACAH,6BADA;AAEAC;AAFA,KATA;AAaAG;AACAJ,mBADA;AAEAC;AAFA;AAbA,GAFA;AAoBAI,MApBA,kBAoBA;AACA;AACAC;AADA;AAGA,GAxBA;AAyBAC;AACAC;AACAC,SADA,iBACA;AACA;AACA,OAHA;AAIAC,SAJA,eAIAP,KAJA,EAIA;AACA;AACA;AANA,KADA;AASAQ,eATA,yBASA;AACA;AACA;AACA;;AACA;AACA;AAdA,GAzBA;AAyCAC,SAzCA,qBAyCA;AACA;AACA;AA3CA","names":["name","props","type","description","disabled","value","inline","data","cbId","computed","model","get","set","inlineClass","mounted"],"sourceRoot":"src/components","sources":["BaseRadio.vue"],"sourcesContent":["<template>\r\n  <div class=\"custom-control custom-radio\" :class=\"[inlineClass, {disabled: disabled}]\">\r\n    <input :id=\"cbId\"\r\n           class=\"custom-control-input\"\r\n           type=\"radio\"\r\n           :disabled=\"disabled\"\r\n           :value=\"name\"\r\n           v-model=\"model\" />\r\n    <label :for=\"cbId\" class=\"custom-control-label\">\r\n      <slot></slot>\r\n    </label>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { randomString } from \"./stringUtils\";\r\nexport default {\r\n  name: \"base-radio\",\r\n  props: {\r\n    name: {\r\n      type: [String, Number],\r\n      description: \"Radio label\"\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      description: \"Whether radio is disabled\"\r\n    },\r\n    value: {\r\n      type: [String, Boolean],\r\n      description: \"Radio value\"\r\n    },\r\n    inline: {\r\n      type: Boolean,\r\n      description: \"Whether radio is inline\"\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      cbId: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    model: {\r\n      get() {\r\n        return this.value;\r\n      },\r\n      set(value) {\r\n        this.$emit(\"input\", value);\r\n      }\r\n    },\r\n    inlineClass() {\r\n      if (this.inline) {\r\n        return `form-check-inline`;\r\n      }\r\n      return \"\";\r\n    }\r\n  },\r\n  mounted() {\r\n    this.cbId = randomString()\r\n  }\r\n};\r\n</script>\r\n"]}]}